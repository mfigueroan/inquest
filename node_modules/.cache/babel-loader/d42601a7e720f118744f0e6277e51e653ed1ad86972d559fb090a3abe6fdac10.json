{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mauricio\\\\Downloads\\\\inquest\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simular verificación de sesión existente\n    const savedUser = localStorage.getItem('inquest_user');\n    if (savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        setUser(parsedUser);\n      } catch (error) {\n        localStorage.removeItem('inquest_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    setLoading(true);\n    try {\n      // Simular llamada a API\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Usuarios de ejemplo para demostración\n      const mockUsers = [{\n        id: '1',\n        username: 'banco1',\n        bankName: 'Banco de Chile',\n        role: 'bank',\n        isActive: true\n      }, {\n        id: '2',\n        username: 'banco2',\n        bankName: 'Banco Santander',\n        role: 'bank',\n        isActive: true\n      }, {\n        id: 'admin',\n        username: 'admin',\n        bankName: 'Administrador',\n        role: 'admin',\n        isActive: true\n      }];\n      const foundUser = mockUsers.find(u => u.username === username && (password === '123456' || password === 'admin'));\n      if (foundUser) {\n        setUser(foundUser);\n        localStorage.setItem('inquest_user', JSON.stringify(foundUser));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error en login:', error);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('inquest_user');\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","parsedUser","JSON","parse","error","removeItem","login","username","password","Promise","resolve","setTimeout","mockUsers","id","bankName","role","isActive","foundUser","find","u","setItem","stringify","console","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mauricio/Downloads/inquest/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\nexport interface User {\r\n  id: string;\r\n  username: string;\r\n  bankName: string;\r\n  role: 'bank' | 'admin';\r\n  isActive: boolean;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simular verificación de sesión existente\r\n    const savedUser = localStorage.getItem('inquest_user');\r\n    if (savedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(savedUser);\r\n        setUser(parsedUser);\r\n      } catch (error) {\r\n        localStorage.removeItem('inquest_user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Simular llamada a API\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Usuarios de ejemplo para demostración\r\n      const mockUsers: User[] = [\r\n        {\r\n          id: '1',\r\n          username: 'banco1',\r\n          bankName: 'Banco de Chile',\r\n          role: 'bank',\r\n          isActive: true\r\n        },\r\n        {\r\n          id: '2',\r\n          username: 'banco2',\r\n          bankName: 'Banco Santander',\r\n          role: 'bank',\r\n          isActive: true\r\n        },\r\n        {\r\n          id: 'admin',\r\n          username: 'admin',\r\n          bankName: 'Administrador',\r\n          role: 'admin',\r\n          isActive: true\r\n        }\r\n      ];\r\n      \r\n      const foundUser = mockUsers.find(u => \r\n        u.username === username && \r\n        (password === '123456' || password === 'admin')\r\n      );\r\n      \r\n      if (foundUser) {\r\n        setUser(foundUser);\r\n        localStorage.setItem('inquest_user', JSON.stringify(foundUser));\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('inquest_user');\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACtD,IAAIF,SAAS,EAAE;MACb,IAAI;QACF,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;QACxCH,OAAO,CAACM,UAAU,CAAC;MACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdL,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;MACzC;IACF;IACAR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAuB;IAC5EX,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAM,IAAIY,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAME,SAAiB,GAAG,CACxB;QACEC,EAAE,EAAE,GAAG;QACPN,QAAQ,EAAE,QAAQ;QAClBO,QAAQ,EAAE,gBAAgB;QAC1BC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEH,EAAE,EAAE,GAAG;QACPN,QAAQ,EAAE,QAAQ;QAClBO,QAAQ,EAAE,iBAAiB;QAC3BC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEH,EAAE,EAAE,OAAO;QACXN,QAAQ,EAAE,OAAO;QACjBO,QAAQ,EAAE,eAAe;QACzBC,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE;MACZ,CAAC,CACF;MAED,MAAMC,SAAS,GAAGL,SAAS,CAACM,IAAI,CAACC,CAAC,IAChCA,CAAC,CAACZ,QAAQ,KAAKA,QAAQ,KACtBC,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,OAAO,CAChD,CAAC;MAED,IAAIS,SAAS,EAAE;QACbtB,OAAO,CAACsB,SAAS,CAAC;QAClBlB,YAAY,CAACqB,OAAO,CAAC,cAAc,EAAElB,IAAI,CAACmB,SAAS,CAACJ,SAAS,CAAC,CAAC;QAC/D,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO,KAAK;IACd,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM0B,MAAM,GAAGA,CAAA,KAAM;IACnB5B,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,MAAMmB,KAAsB,GAAG;IAC7B9B,IAAI;IACJ+B,eAAe,EAAE,CAAC,CAAC/B,IAAI;IACvBY,KAAK;IACLiB,MAAM;IACN3B;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EAChCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrC,GAAA,CAxFWF,YAAyC;AAAAwC,EAAA,GAAzCxC,YAAyC;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}